name: Run Jest Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./SERVER

      - name: Setup environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        working-directory: ./SERVER

      - name: Wait for PostgreSQL to be ready # THÊM LẠI BƯỚC NÀY VÀ ĐẶT ĐÚNG VỊ TRÍ
        run: |
          for i in $(seq 1 10); do
            # Sử dụng nc (netcat) để kiểm tra kết nối TCP đến cổng 5432
            nc -z localhost 5432 && echo "PostgreSQL is ready" && break
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Create Test Database
        run: |
          psql -h localhost -p 5432 -U ${{ secrets.DB_USER }} -d postgres -c "CREATE DATABASE ${{ secrets.DB_NAME_TEST }};"
        working-directory: ./SERVER
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Initialize Test Database Schema
        run: |
          psql -h localhost -p 5432 -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME_TEST }} -f ./db_scripts/init_test_db.sql
        working-directory: ./SERVER # Đảm bảo chạy từ thư mục SERVER
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run tests
        run: npm test
        working-directory: ./SERVER
        env:
          NODE_ENV: test
        

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
