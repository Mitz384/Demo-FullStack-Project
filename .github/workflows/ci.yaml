name: Run Jest Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./SERVER

      - name: Create Test Database
        run: |
          set -e
          echo "Attempting to create database ${{ secrets.DB_NAME_TEST }}..."
          psql -h localhost -p 5432 -U ${{ secrets.DB_USER }} -d postgres -tc "SELECT 1 FROM pg_database WHERE datname = '${{ secrets.DB_NAME_TEST }}'" | grep -q 1 || \
          psql -h localhost -p 5432 -U ${{ secrets.DB_USER }} -d postgres -c "CREATE DATABASE ${{ secrets.DB_NAME_TEST }};"
          echo "Database ${{ secrets.DB_NAME_TEST }} created or already exists."
          sleep 3
        working-directory: ./SERVER
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Initialize Test Database Schema
        run: |
          set -e
          echo "Initializing schema in database ${{ secrets.DB_NAME_TEST }}..."
          psql -h localhost -p 5432 -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME_TEST }} -f ./db/init_test_db.sql
          echo "Schema initialized successfully."
        working-directory: ./SERVER
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run tests
        working-directory: ./SERVER
        env:
          NODE_ENV: test
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        run: npm test

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME_TEST }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
